AWSTemplateFormatVersion: "2010-09-09"
Description: Bastion

Parameters:
  BastionName:
    Type: String
    Description: Bastion name

  Environment:
    Type: String
    AllowedValues: [prod, uat, dev]
    Default: dev
    Description: Target environment

#  KeyName:
#    Type: String
#    Description: Name of existing EC2 key pair

  VpcStackName:
    Type: String
    Description: Name of the VPC stack to be imported

  DevopsPassword:
    Type: String
    NoEcho: true
    Description: Password for devops user

Resources:
  BastionSSMRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: ec2.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore
      Tags:
        - Key: Name
          Value: !Sub "${BastionName}-${Environment}-ssm-role"

  BastionInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Roles:
        - !Ref BastionSSMRole

  BastionSG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Bastion SG - only reachable from Bastion
      VpcId:
        !ImportValue
          Fn::Sub: "${VpcStackName}-VpcId"
# Plus besoin d'ingress SSH ici
#      SecurityGroupIngress:
#        - IpProtocol: tcp
#          FromPort: 22
#          ToPort: 22
#          CidrIp: 0.0.0.0/0  # Ã€ restreindre pour la prod
      Tags:
        - Key: Name
          Value: !Sub "${BastionName}-${Environment}-ec2-sg"
        - Key: Environment
          Value: !Ref Environment

  BastionHost:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: t2.micro
#      KeyName: !Ref KeyName
      ImageId: ami-0caad95876a4611ee  # Amazon Linux 2023 (Paris)
      SubnetId:
        !ImportValue
          Fn::Sub: "${VpcStackName}-FirstPublicSubnetId"
      SecurityGroupIds:
        - !Ref BastionSG
      IamInstanceProfile: !Ref BastionInstanceProfile
      Tags:
        - Key: Name
          Value: !Sub "${BastionName}-${Environment}"
        - Key: Environment
          Value: !Ref Environment
        - Key: SSM
          Value: true
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash
          dnf install -y mariadb105
          echo "Bastion ready with mariadb client for MySQL connections"
#          dnf install -y amazon-ssm-agent
#          systemctl enable amazon-ssm-agent
#          systemctl start amazon-ssm-agent
#          yum update -y
#          yum install -y htop git vim
#          useradd devops
#          passwd -l devops

Outputs:  
  BastionSGId:
    Description: ID du Bastion Security Group
    Value: !GetAtt BastionSG.GroupId
    Export:
      Name: !Sub "${AWS::StackName}-BastionSG"